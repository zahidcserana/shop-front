import * as tslib_1 from "tslib";
import { NgModule } from "@angular/core";
import { KeyboardShortcutsComponent } from "./ng-keyboard-shortcuts.component";
import { KeyboardShortcutsService } from "./ng-keyboard-shortcuts.service";
import { KeyboardShortcutsHelpService } from './ng-keyboard-shortcuts-help.service';
import { KeyboardShortcutsDirective } from './ng-keyboard-shortcuts.directive';
import { KeyboardShortcutsHelpComponent } from './ng-keyboard-shortcuts-help.component';
import { KeyboardShortcutsHelpItemComponent } from './ng-keyboard-shortcuts-help-item.component';
import { CommonModule } from "@angular/common";
var KeyboardShortcutsModule = /** @class */ (function () {
    function KeyboardShortcutsModule() {
    }
    KeyboardShortcutsModule_1 = KeyboardShortcutsModule;
    KeyboardShortcutsModule.forRoot = function () {
        return {
            ngModule: KeyboardShortcutsModule_1,
            providers: [
                KeyboardShortcutsService,
                KeyboardShortcutsHelpService
            ]
        };
    };
    var KeyboardShortcutsModule_1;
    KeyboardShortcutsModule = KeyboardShortcutsModule_1 = tslib_1.__decorate([
        NgModule({
            imports: [CommonModule],
            entryComponents: [KeyboardShortcutsHelpComponent],
            declarations: [KeyboardShortcutsComponent, KeyboardShortcutsDirective, KeyboardShortcutsHelpComponent, KeyboardShortcutsHelpItemComponent],
            exports: [KeyboardShortcutsComponent, KeyboardShortcutsDirective, KeyboardShortcutsHelpComponent]
        })
    ], KeyboardShortcutsModule);
    return KeyboardShortcutsModule;
}());
export { KeyboardShortcutsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcta2V5Ym9hcmQtc2hvcnRjdXRzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWtleWJvYXJkLXNob3J0Y3V0cy8iLCJzb3VyY2VzIjpbImxpYi9uZy1rZXlib2FyZC1zaG9ydGN1dHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUNwRixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMvRSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUN4RixPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUNqRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFVL0M7SUFBQTtJQVVBLENBQUM7Z0NBVlksdUJBQXVCO0lBQ2xCLCtCQUFPLEdBQXJCO1FBQ0ksT0FBTztZQUNILFFBQVEsRUFBRSx5QkFBdUI7WUFDakMsU0FBUyxFQUFFO2dCQUNQLHdCQUF3QjtnQkFDeEIsNEJBQTRCO2FBQy9CO1NBQ0osQ0FBQztJQUNOLENBQUM7O0lBVFEsdUJBQXVCO1FBTm5DLFFBQVEsQ0FBQztZQUNOLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztZQUN2QixlQUFlLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQztZQUNqRCxZQUFZLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSwwQkFBMEIsRUFBRSw4QkFBOEIsRUFBRSxrQ0FBa0MsQ0FBQztZQUMxSSxPQUFPLEVBQUUsQ0FBQywwQkFBMEIsRUFBRSwwQkFBMEIsRUFBRSw4QkFBOEIsQ0FBQztTQUNwRyxDQUFDO09BQ1csdUJBQXVCLENBVW5DO0lBQUQsOEJBQUM7Q0FBQSxBQVZELElBVUM7U0FWWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBLZXlib2FyZFNob3J0Y3V0c0NvbXBvbmVudCB9IGZyb20gXCIuL25nLWtleWJvYXJkLXNob3J0Y3V0cy5jb21wb25lbnRcIjtcbmltcG9ydCB7IEtleWJvYXJkU2hvcnRjdXRzU2VydmljZSB9IGZyb20gXCIuL25nLWtleWJvYXJkLXNob3J0Y3V0cy5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBLZXlib2FyZFNob3J0Y3V0c0hlbHBTZXJ2aWNlIH0gZnJvbSAnLi9uZy1rZXlib2FyZC1zaG9ydGN1dHMtaGVscC5zZXJ2aWNlJztcbmltcG9ydCB7IEtleWJvYXJkU2hvcnRjdXRzRGlyZWN0aXZlIH0gZnJvbSAnLi9uZy1rZXlib2FyZC1zaG9ydGN1dHMuZGlyZWN0aXZlJztcbmltcG9ydCB7IEtleWJvYXJkU2hvcnRjdXRzSGVscENvbXBvbmVudCB9IGZyb20gJy4vbmcta2V5Ym9hcmQtc2hvcnRjdXRzLWhlbHAuY29tcG9uZW50JztcbmltcG9ydCB7IEtleWJvYXJkU2hvcnRjdXRzSGVscEl0ZW1Db21wb25lbnQgfSBmcm9tICcuL25nLWtleWJvYXJkLXNob3J0Y3V0cy1oZWxwLWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcblxuXG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gICAgZW50cnlDb21wb25lbnRzOiBbS2V5Ym9hcmRTaG9ydGN1dHNIZWxwQ29tcG9uZW50XSxcbiAgICBkZWNsYXJhdGlvbnM6IFtLZXlib2FyZFNob3J0Y3V0c0NvbXBvbmVudCwgS2V5Ym9hcmRTaG9ydGN1dHNEaXJlY3RpdmUsIEtleWJvYXJkU2hvcnRjdXRzSGVscENvbXBvbmVudCwgS2V5Ym9hcmRTaG9ydGN1dHNIZWxwSXRlbUNvbXBvbmVudF0sXG4gICAgZXhwb3J0czogW0tleWJvYXJkU2hvcnRjdXRzQ29tcG9uZW50LCBLZXlib2FyZFNob3J0Y3V0c0RpcmVjdGl2ZSwgS2V5Ym9hcmRTaG9ydGN1dHNIZWxwQ29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBLZXlib2FyZFNob3J0Y3V0c01vZHVsZSB7XG4gICAgcHVibGljIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IEtleWJvYXJkU2hvcnRjdXRzTW9kdWxlLFxuICAgICAgICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgICAgICAgICAgS2V5Ym9hcmRTaG9ydGN1dHNTZXJ2aWNlLFxuICAgICAgICAgICAgICAgIEtleWJvYXJkU2hvcnRjdXRzSGVscFNlcnZpY2VcbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcbiAgICB9XG59XG4iXX0=