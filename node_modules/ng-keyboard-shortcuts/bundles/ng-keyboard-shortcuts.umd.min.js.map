{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng-keyboard-shortcuts/lib/keys.ts","ng://ng-keyboard-shortcuts/lib/utils.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts.interfaces.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts.service.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts.component.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts-help.service.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts.directive.ts","ng://ng-keyboard-shortcuts/lib/portal.ts","ng://ng-keyboard-shortcuts/lib/dom-portal-outlet.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts-help.component.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts-help-item.component.ts","ng://ng-keyboard-shortcuts/lib/ng-keyboard-shortcuts.module.ts","ng://ng-keyboard-shortcuts/lib/polyfills.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","isMac","navigator","userAgent","indexOf","modifiers","shift","ctrl","alt","cmd","command","meta","left command","right command","⌘","option","ctl","control","symbols","left","right","up","down","_MAP","8","9","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","45","46","91","93","224","_KEYCODE_MAP","106","107","109","110","111","186","187","188","189","190","191","192","219","220","221","222","_SHIFT_MAP","`","1","2","3","4","5","6","7","0","-","=",";","'",",",".","/","\\","toString","_this","isFunction","x","AllowIn","any","fn","list","idx","identity","difference","first","second","filter","item","includes","allPass","preds","args","_i","len","maxArrayProp","property","array","reduce","acc","curr","propFn","prop","object","_a","guid","KeyboardShortcutsService","_shortcuts","_sequences","throttleTime","_pressed","Subject","pressed$","asObservable","disabled","_shortcutsSub","BehaviorSubject","shortcuts$","pipe","shortcuts","_ignored","subscriptions","isAllowed","shortcut","event","allowIn","nodeName","mapEvent","map","predicates","priority","keydown$","fromEvent","document","keydownCombo$","_","tap","preventDefault","throttle","timer","catchError","throwError","timer$","resetCounter$","switchMap","KeyboardShortcutsService_1","TIMEOUT_SEQUENCE","keydownSequence$","isSequence","sequences","scan","arg","currentLength","events","characters","characterFromEvent","isArray","result","sequence","seque","some","partialMatch","fullMatch","isFullMatch","match","modifiersOn","guess","of","takeUntil","repeat","getKeys","keys","trim","toLowerCase","shiftKey","char","subscribe","_characterFromEvent","which","keyCode","String","fromCharCode","ngOnDestroy","forEach","sub","unsubscribe","add","commands","parseCommand","setTimeout","id","remove","ids","select","eventKeys","find","eventKey","mod","Math","max","split","tslib_1.__assign","Injectable","providedIn","KeyboardShortcutsComponent","keyboard","clearIds","_disabled","ngOnInit","ngAfterViewInit","ngOnChanges","changes","currentValue","tslib_1.__decorate","Input","Component","selector","template","KeyboardShortcutsHelpService","Boolean","label","description","KeyboardShortcutsDirective","el","ngKeyboardShortcuts","transformInput","nativeElement","Select","Textarea","Directive","ElementRef","Portal","attach","host","console","hasAttached","_attachedHost","detach","setAttachedHost","ComponentPortal","_super","component","viewContainerRef","injector","componentFactoryResolver","tslib_1.__extends","TemplatePortal","context","templateRef","elementRef","undefined","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","attachComponentPortal","portal","componentRef","componentFactory","resolveComponentFactory","createComponent","setDisposeFn","destroy","attachView","hostView","detachView","appendChild","_getComponentRootNode","attachTemplatePortal","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","index","dispose","parentNode","removeChild","BasePortalOutlet","_isDisposed","_attachedPortal","_invokeDisposeFn","_disposeFn","scrollAbleKeys","Map","preventDefaultForScrollKeys","has","scrollEvents","name","callback","disableScroll","ignore","closest","window","returnValue","addEventListener","passive","KeyboardShortcutsHelpComponent","appRef","element","keyboardHelp","disableScrolling","className","title","emptyMessage","showing","bodyPortalHost","body","_key","toggle","_closeKey","closeKeyIds","hide","reveal","visible","removeEventListener","subscription","timeoutId","clearTimeout","distinctUntilChanged","labels","ViewChild","TemplateRef","static","animations","trigger","transition","style","transform","opacity","animate","ComponentFactoryResolver","ApplicationRef","ViewContainerRef","Injector","KeyboardShortcutsHelpItemComponent","_shortcut","parsedKeys","KeyboardShortcutsModule","forRoot","ngModule","KeyboardShortcutsModule_1","providers","NgModule","imports","CommonModule","entryComponents","declarations","exports","Element","matches","msMatchesSelector","webkitMatchesSelector","parentElement","nodeType","flat","depth","flattend","array_1","__values","array_1_1","floor","flatMap"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","const isMac = (navigator.userAgent.indexOf('Mac OS') !== -1);\n\nexport const modifiers = {\n    'shift': 'shiftKey',\n    'ctrl': 'ctrlKey',\n    'alt': 'altKey',\n    'cmd': isMac ? 'metaKey' : 'ctrlKey',\n    'command': isMac ? 'metaKey' : 'ctrlKey',\n    'meta': isMac? 'metaKey' : 'ctrlKey',\n    'left command': 'metaKey',\n    'right command': 'MetaRight',\n    'â': isMac ? 'metaKey' : 'ctrlKey',\n    'option': 'altKey',\n    'ctl': 'ctrlKey',\n    'control': 'ctrlKey',\n};\n\nexport const symbols = {\n    'cmd': isMac ? 'â' : 'Ctrl',\n    'command': isMac ? 'â' : 'Ctrl',\n    'left command': isMac ? 'â' : 'Ctrl',\n    'right command': isMac ? 'â' : 'Ctrl',\n    'option': isMac ? 'â¥' : 'Alt',\n    'left': 'â',\n    'right': 'â',\n    'up': 'â',\n    'down': 'â',\n    'alt': isMac ? 'â¥' : 'Alt',\n    'ctrl': 'Ctrl',\n    'control': 'Ctrl',\n    'shift': 'â§'\n};\n\nexport const _MAP = {\n    8: 'backspace',\n    9: 'tab',\n    13: 'enter',\n    16: 'shift',\n    17: ['ctrl', 'control'],\n    18: 'alt',\n    20: 'capslock',\n    27: ['esc', 'escape'],\n    32: ['space', 'spc'],\n    33: 'pageup',\n    34: 'pagedown',\n    35: 'end',\n    36: 'home',\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down',\n    45: 'ins',\n    46: 'del',\n    91: ['meta', 'cmd', 'command'],\n    93: ['meta', 'cmd', 'command'],\n    224: ['meta', 'cmd', 'command']\n};\n\n\n/**\n * mapping for special characters so they can support\n *\n * this dictionary is only used incase you want to bind a\n * keyup or keydown event to one of these keys\n *\n * @type\n */\nexport const _KEYCODE_MAP = {\n    106: '*',\n    107: '+',\n    109: '-',\n    110: '.',\n    111 : '/',\n    186: ';',\n    187: '=',\n    188: ',',\n    189: '-',\n    190: '.',\n    191: '/',\n    192: '`',\n    219: '[',\n    220: '\\\\',\n    221: ']',\n    222: '\\''\n};\n\n/**\n * this is a mapping of keys that require shift on a US keypad\n * back to the non shift equivelents\n *\n * this is so you can use keyup events with these keys\n *\n * note that this will only work reliably on US keyboards\n *\n */\nexport const _SHIFT_MAP = {\n    '`': '~',\n    '1': '!',\n    '2': '@',\n    '3': '#',\n    '4': '$',\n    '5': '%',\n    '6': '^',\n    '7': '&',\n    '8': '*',\n    '9': '(',\n    '0': ')',\n    '-': '_',\n    '=': '+',\n    ';': ':',\n    '\\'': '\\\"',\n    ',': '<',\n    '.': '>',\n    '/': '?',\n    '\\\\': '|'\n};\n\n/**\n * loop through the f keys, f1 to f19 and add them to the map\n * programatically\n */\nfor (let i = 1; i < 20; ++i) {\n    _MAP[111 + i] = 'f' + i;\n}\n\n/**\n * loop through to map numbers on the numeric keypad\n */\nfor (let i = 0; i <= 9; ++i) {\n\n    // This needs to use a string cause otherwise since 0 is falsey\n    // event will never fire for numpad 0 pressed as part of a keydown\n    // event.\n    _MAP[i + 96] = i.toString();\n}","export function isFunction(x: any): x is Function {\n    return typeof x === \"function\";\n}\n\nexport const any = (fn: Function, list: any[]) => {\n    let idx = 0;\n    while (idx < list.length) {\n        if (fn(list[idx])) {\n            return true;\n        }\n        idx += 1;\n    }\n    return false;\n};\n\nexport const identity = x => x;\n\n/**\n * @ignore\n * @param x\n * @returns boolean\n */\nexport const isNill = x => x == null;\n\n/**\n * @ignore\n * @param xs\n * @param key\n * @returns any\n */\nexport const groupBy = (xs, key) =>\n    xs.reduce(\n        (result, x) => ({\n            ...result,\n            [x[key]]: [...(result[x[key]] || []), x]\n        }),\n        {}\n    );\n\n/**\n * @ignore\n * @param first\n * @param second\n * @returns any[]\n */\nexport const difference = (first: any[], second: any[]) =>\n    first.filter(item => !second.includes(item));\n\n/**\n * @ignore\n * @param preds\n * @returns (...args) => boolean;\n */\nexport const allPass = preds => (...args) => {\n    let idx = 0;\n    const len = preds.length;\n    while (idx < len) {\n        if (!preds[idx].apply(this, args)) {\n            return false;\n        }\n        idx += 1;\n    }\n    return true;\n};\nexport const prop = prop => object => object[prop];\n\nconst minMaxArrayProp = type => (property, array) =>\n    Math[type].apply(Math, array.map(prop(property)));\n\nexport const maxArrayProp = (property, array) => {\n    return array.reduce(\n        (acc, curr) => {\n            const propFn = prop(property);\n            const currentValue = propFn(curr);\n            const previousValue = propFn(acc);\n            return currentValue > previousValue ? curr : acc;\n        },\n        { [property]: 0 }\n    );\n};","/**\n * The shortcut input for the Directive\n */\nexport interface Shortcut {\n\n    /**\n     * A key or list of keys to listen to and fire the command.\n     */\n    key: string | string[];\n\n    /**\n     * callback to be called when shortcut is pressed.\n     * @param event - the event out\n     */\n    command(event: ShortcutEventOutput): any;\n\n    /**\n     * Description for the command can be used for rendering help menu.\n     */\n    description?: string;\n\n    /**\n     * How much time to throttle in ms.\n     */\n    throttleTime?: number;\n\n    /**\n     * Label, can be used for grouping commands.\n     */\n    label?: string;\n\n    /**\n     * Prevent browser default, default: false\n     */\n    preventDefault?: boolean;\n}\n\n/**\n * The shortcut input type for ng-keyboard-shortcuts component\n */\nexport interface ShortcutInput extends Shortcut {\n    /**\n     * textarea, select and input are ignored by default, this is used to override\n     * this behavior.\n     * allow in node names, accepts: [\"TEXTAREA\", \"SELECT\", \"INPUT]\n     */\n    allowIn?: AllowIn[];\n    /**\n     * Only trigger the command when the target is in focus.\n     */\n    target?: HTMLElement;\n}\n\nexport enum AllowIn {\n    Textarea = 'TEXTAREA',\n    Input = 'INPUT',\n    Select = \"SELECT\"\n}\n\n/**\n * @ignore\n */\nexport interface ParsedShortcut extends ShortcutInput {\n    key: string[];\n    predicates: Function[][];\n    id: string;\n    priority?: number;\n\n    isSequence: boolean;\n    sequence?: string[][];\n    event?: KeyboardEvent;\n}\n\n/**\n * The output type fired by the command when shortcut is triggered.\n */\nexport interface ShortcutEventOutput {\n    /**\n     * The browser keyboard event\n     */\n    event: KeyboardEvent;\n    /**\n     * The registered key that was triggered\n     */\n    key: string[] | string;\n}","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { _KEYCODE_MAP, _MAP, _SHIFT_MAP, modifiers } from \"./keys\";\nimport {\n    BehaviorSubject,\n    fromEvent,\n    Observable,\n    Subject,\n    Subscription,\n    throwError,\n    timer,\n    of\n} from \"rxjs\";\nimport {\n    ParsedShortcut,\n    ShortcutEventOutput,\n    ShortcutInput\n} from \"./ng-keyboard-shortcuts.interfaces\";\nimport {\n    catchError,\n    filter,\n    map,\n    repeat,\n    scan,\n    switchMap,\n    takeUntil,\n    tap,\n    throttle\n} from \"rxjs/operators\";\nimport { allPass, any, difference, identity, isFunction, isNill, maxArrayProp } from \"./utils\";\n\n/**\n * @ignore\n * @type {number}\n */\nlet guid = 0;\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class KeyboardShortcutsService implements OnDestroy {\n    /**\n     * Parsed shortcuts\n     * for each key create a predicate function\n     */\n    private _shortcuts: ParsedShortcut[] = [];\n\n    private _sequences: ParsedShortcut[] = [];\n\n    /**\n     * Throttle the keypress event.\n     */\n    private throttleTime = 0;\n\n    private _pressed = new Subject<ShortcutEventOutput>();\n\n    /**\n     * Streams of pressed events, can be used instead or with a command.\n     */\n    public pressed$ = this._pressed.asObservable();\n\n    /**\n     * Disable all keyboard shortcuts\n     */\n    private disabled = false;\n    /**\n     * @ignore\n     * 2000 ms window to allow between key sequences otherwise\n     * the sequence will reset.\n     */\n    private static readonly TIMEOUT_SEQUENCE = 1000;\n\n    private _shortcutsSub = new BehaviorSubject<ParsedShortcut[]>([]);\n    public shortcuts$ = this._shortcutsSub\n        .asObservable()\n        .pipe(filter(shortcuts => !!shortcuts.length));\n\n    private _ignored = [\"INPUT\", \"TEXTAREA\", \"SELECT\"];\n\n    /**\n     * @ignore\n     * Subscription for on destroy.\n     */\n    private readonly subscriptions: Subscription[] = [];\n\n    /**\n     * @ignore\n     * @param shortcut\n     */\n    private isAllowed = (shortcut: ParsedShortcut) => {\n        const target = shortcut.event.target as HTMLElement;\n        if (target === shortcut.target) {\n            return true;\n        }\n        if (shortcut.allowIn.length) {\n            return !difference(this._ignored, shortcut.allowIn).includes(target.nodeName);\n        }\n        return !this._ignored.includes(target.nodeName);\n    };\n\n    /**\n     * @ignore\n     * @param event\n     */\n    private mapEvent = event => {\n        return this._shortcuts\n            .map(shortcut =>\n                Object.assign({}, shortcut, {\n                    predicates: any(\n                        identity,\n                        shortcut.predicates.map((predicates: any) => allPass(predicates)(event))\n                    ),\n                    event: event\n                })\n            )\n            .filter(shortcut => shortcut.predicates)\n            .reduce((acc, shortcut) => (acc.priority > shortcut.priority ? acc : shortcut), {\n                priority: 0\n            } as ParsedShortcut);\n    };\n\n    /**\n     * @ignore\n     */\n    private keydown$ = fromEvent(document, \"keydown\");\n\n    /**\n     * @ignore\n     */\n    private keydownCombo$ = this.keydown$.pipe(\n        filter(_ => !this.disabled),\n        map(this.mapEvent),\n        filter(\n            (shortcut: ParsedShortcut) =>\n                !shortcut.target || shortcut.event.target === shortcut.target\n        ),\n        filter((shortcut: ParsedShortcut) => isFunction(shortcut.command)),\n        filter(this.isAllowed),\n        tap(shortcut => !shortcut.preventDefault || shortcut.event.preventDefault()),\n        throttle(shortcut => timer(shortcut.throttleTime)),\n        tap(shortcut => shortcut.command({ event: shortcut.event, key: shortcut.key })),\n        tap(shortcut => this._pressed.next({ event: shortcut.event, key: shortcut.key })),\n        catchError(error => throwError(error))\n    );\n\n    /**\n     * @ignore\n     */\n    private timer$ = new Subject();\n    /**\n     * @ignore\n     */\n    private resetCounter$ = this.timer$\n        .asObservable()\n        .pipe(switchMap(() => timer(KeyboardShortcutsService.TIMEOUT_SEQUENCE)));\n    /**\n     * @ignore\n     */\n    private keydownSequence$ = this.shortcuts$.pipe(\n        map(shortcuts => shortcuts.filter(shortcut => shortcut.isSequence)),\n        switchMap(sequences =>\n            this.keydown$.pipe(\n                map(event => {\n                    return {\n                        event,\n                        sequences\n                    };\n                }),\n                tap(this.timer$)\n            )\n        ),\n        scan(\n            (acc: { events: any[]; command?: any; sequences: any[] }, arg: any) => {\n                let { event } = arg;\n                const currentLength = acc.events.length;\n                const sequences = currentLength ? acc.sequences : arg.sequences;\n                let [characters] = this.characterFromEvent(event);\n                characters = Array.isArray(characters) ? characters : [characters];\n                const result = sequences\n                    .map(sequence => {\n                        const sequences = sequence.sequence.filter(\n                            seque => characters.some((key) => seque[currentLength] === key)\n                        );\n                        const partialMatch = sequences.length > 0;\n                        if (sequence.fullMatch) {\n                            return sequence;\n                        }\n                        return {\n                            ...sequence,\n                            sequence: sequences,\n                            partialMatch,\n                            event: event,\n                            fullMatch:\n                                partialMatch &&\n                                this.isFullMatch({ command: sequence, events: acc.events })\n                        };\n                    })\n                    .filter(sequences => sequences.partialMatch || sequences.fullMatch);\n\n                let [match] = result;\n                if (!match || this.modifiersOn(event)) {\n                    return { events: [], sequences: this._sequences };\n                }\n                /*\n                 * handle case of \"?\" sequence and \"? a\" sequence\n                 * need to determine which one to trigger.\n                 * if both match, we pick the longer one (? a) in this case.\n                 */\n                const guess = maxArrayProp('priority', result);\n                if (result.length > 1 && guess.fullMatch) {\n                    return { events: [], command: guess, sequences: this._sequences };\n                }\n                if (result.length > 1) {\n                    return { events: [...acc.events, event], command: result, sequences: result };\n                }\n                if (match.fullMatch) {\n                    return { events: [], command: match, sequences: this._sequences };\n                }\n                return { events: [...acc.events, event], command: result, sequences: result };\n            },\n            { events: [], sequences: [] }\n        ),\n        switchMap(({ command }) => {\n            if (Array.isArray(command)) {\n                /*\n                 * Add a timer to handle the case where for example:\n                 * a sequence \"?\" is registered and \"? a\" is registered as well\n                 * if the user does not hit any key for 500ms, the single sequence will trigger\n                 * if any keydown event occur, this timer will reset, given a chance to complete\n                 * the full sequence (? a) in this case.\n                 * This delay only occurs when single key sequence is the beginning of another sequence.\n                 */\n                return timer(500).pipe(\n                    map(() => ({ command: command.filter(command => command.fullMatch)[0] })),\n                );\n            }\n            return of({ command });\n        }),\n        filter(({ command }) => command && command.fullMatch),\n        map(({ command }) => command),\n        filter((shortcut: ParsedShortcut) => isFunction(shortcut.command)),\n        filter(this.isAllowed),\n        tap(shortcut => !shortcut.preventDefault || shortcut.event.preventDefault()),\n        throttle(shortcut => timer(shortcut.throttleTime)),\n        tap(shortcut => shortcut.command({ event: shortcut.event, key: shortcut.key })),\n        tap(shortcut => this._pressed.next({ event: shortcut.event, key: shortcut.key })),\n        takeUntil(this.resetCounter$),\n        repeat()\n    );\n\n    /**\n     * @ignore\n     * @param command\n     * @param events\n     */\n    private isFullMatch({ command, events }) {\n        if (!command) {\n            return false;\n        }\n        return command.sequence.some(sequence => {\n            return sequence.length === events.length + 1;\n        });\n    }\n\n    /**\n     * @ignore\n     */\n    private get shortcuts() {\n        return this._shortcuts;\n    }\n\n    /**\n     * @ignore\n     */\n    constructor() {\n        this.subscriptions.push(this.keydownSequence$.subscribe(), this.keydownCombo$.subscribe());\n    }\n\n    /**\n     * @ignore\n     * @param event\n     */\n    private _characterFromEvent(event): [string, boolean] {\n        if (typeof event.which !== \"number\") {\n            event.which = event.keyCode;\n        }\n        // for non keypress events the special maps are needed\n        if (_MAP[event.which]) {\n            return [_MAP[event.which], event.shiftKey];\n        }\n\n        if (_KEYCODE_MAP[event.which]) {\n            return [_KEYCODE_MAP[event.which], event.shiftKey];\n        }\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return [String.fromCharCode(event.which).toLowerCase(), event.shiftKey];\n    }\n\n    private characterFromEvent(event) {\n        let [key, shiftKey] = this._characterFromEvent(event);\n        if (shiftKey && _SHIFT_MAP[key]) {\n            return [_SHIFT_MAP[key], shiftKey];\n        }\n        return [key, shiftKey];\n    }\n\n    /**\n     * @ignore\n     * Remove subscription.\n     */\n    ngOnDestroy(): void {\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n    /**\n     * @ignore\n     * @param shortcuts\n     */\n    private isSequence(shortcuts: string[]): boolean {\n        return !shortcuts.some(shortcut => shortcut.includes(\"+\"));\n    }\n\n    /**\n     * Add new shortcut/s\n     */\n    public add(shortcuts: ShortcutInput[] | ShortcutInput): string[] {\n        shortcuts = Array.isArray(shortcuts) ? shortcuts : [shortcuts];\n        const commands = this.parseCommand(shortcuts);\n        commands.forEach(command => {\n            if (command.isSequence) {\n                this._sequences.push(command);\n                return;\n            }\n            this._shortcuts.push(command);\n        });\n        setTimeout(() => {\n            this._shortcutsSub.next([...this._shortcuts, ...this._sequences]);\n        });\n        return commands.map(command => command.id);\n    }\n\n    /**\n     * Remove a command based on key or array of keys.\n     * can be used for cleanup.\n     * @returns\n     * @param ids\n     */\n    public remove(ids: string | string[]): KeyboardShortcutsService {\n        ids = Array.isArray(ids) ? ids : [ids];\n        this._shortcuts = this._shortcuts.filter(shortcut => !ids.includes(shortcut.id));\n        this._sequences = this._sequences.filter(shortcut => !ids.includes(shortcut.id));\n        setTimeout(() => {\n            this._shortcutsSub.next([...this._shortcuts, ...this._sequences]);\n        });\n        return this;\n    }\n\n    /**\n     * Returns an observable of keyboard shortcut filtered by a specific key.\n     * @param key - the key to filter the observable by.\n     */\n    public select(key: string): Observable<ShortcutEventOutput> {\n        return this.pressed$.pipe(\n            filter(({ event, key: eventKeys }) => {\n                eventKeys = Array.isArray(eventKeys) ? eventKeys : [eventKeys];\n                return !!eventKeys.find(eventKey => eventKey === key);\n            })\n        );\n    }\n\n    /**\n     * @ignore\n     * transforms a shortcut to:\n     * a predicate function\n     */\n    private getKeys = (keys: string[]) => {\n        return keys\n            .map(key => key.trim().toLowerCase())\n            .filter(key => key !== \"+\")\n            .map(key => {\n                // for modifiers like control key\n                // look for event['ctrlKey']\n                // otherwise use the keyCode\n                if (modifiers.hasOwnProperty(key)) {\n                    return event => !!event[modifiers[key]];\n                }\n\n                return event => {\n                    let [characters, shiftKey] = this.characterFromEvent(event);\n                    characters = Array.isArray(characters) ? characters : [characters];\n                    return characters.some(char => {\n                        if (char === key && shiftKey) {\n                            return true;\n                        }\n                        return key === char;\n                    })\n                };\n            });\n    };\n\n    /**\n     * @ignore\n     * @param event\n     */\n    private modifiersOn(event) {\n        return [\"metaKey\", \"altKey\", \"ctrlKey\"].some(mod => event[mod]);\n    }\n\n    /**\n     * @ignore\n     * Parse each command using getKeys function\n     */\n    private parseCommand(command: ShortcutInput | ShortcutInput[]): ParsedShortcut[] {\n        const commands = Array.isArray(command) ? command : [command];\n        return commands.map(command => {\n            const keys = Array.isArray(command.key) ? command.key : [command.key];\n            const priority = Math.max(...keys.map(key => key.split(\" \").filter(identity).length));\n            const predicates = keys.map(key => this.getKeys(key.split(\" \").filter(identity)));\n            const isSequence = this.isSequence(keys);\n            const sequence = isSequence\n                ? keys.map(key =>\n                      key\n                          .split(\" \")\n                          .filter(identity)\n                          .map(key => key.trim())\n                  )\n                : [];\n            return {\n                ...command,\n                isSequence,\n                sequence: isSequence ? sequence : [],\n                allowIn: command.allowIn || [],\n                key: keys,\n                id: `${guid++}`,\n                throttle: isNill(command.throttleTime) ? this.throttleTime : command.throttleTime,\n                priority: priority,\n                predicates: predicates\n            } as ParsedShortcut;\n        });\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges\n} from \"@angular/core\";\nimport { KeyboardShortcutsService } from \"./ng-keyboard-shortcuts.service\";\nimport { ShortcutInput, ShortcutEventOutput } from \"./ng-keyboard-shortcuts.interfaces\";\nimport { Observable } from \"rxjs\";\n\n/**\n * A component to bind global shortcuts, can be used multiple times across the app\n * will remove registered shortcuts when element is removed from DOM.\n */\n@Component({\n    selector: \"ng-keyboard-shortcuts\",\n    template: \"\"\n})\nexport class KeyboardShortcutsComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n    /**\n     * A list of shortcuts.\n     */\n    @Input() shortcuts: ShortcutInput[] | ShortcutInput = [];\n\n    /**\n     * @ignore\n     * list of registered keyboard shortcuts\n     * used for clean up on NgDestroy.\n     */\n    private clearIds: string[] = [];\n\n    /**\n     * @ignore\n     */\n    private _disabled = false;\n    /**\n     * Disable all shortcuts for this component.\n     */\n    @Input() set disabled(value) {\n        this._disabled = value;\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n            this.clearIds = [];\n        }\n        if (value) {\n            return;\n        }\n        this.clearIds = this.keyboard.add(this.shortcuts);\n    }\n\n    /**\n     * @ignore\n     * @param {KeyboardShortcutsService} keyboard\n     */\n    constructor(private keyboard: KeyboardShortcutsService) {}\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {}\n\n    /**\n     * Select a key to listen to, will emit when the selected key is pressed.\n     */\n    public select(key: string): Observable<ShortcutEventOutput> {\n        return this.keyboard.select(key);\n    }\n\n    /**\n     * @ignore\n     */\n    ngAfterViewInit(): void {}\n\n    /**\n     * @ignore\n     */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!changes.shortcuts || !changes.shortcuts.currentValue) {\n            return;\n        }\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        setTimeout(() => this.clearIds = this.keyboard.add(changes.shortcuts.currentValue));\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy(): void {\n        this.keyboard.remove(this.clearIds);\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { KeyboardShortcutsService } from \"./ng-keyboard-shortcuts.service\";\nimport { map } from \"rxjs/operators\";\n\n/**\n * Service to assist showing custom help screen\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class KeyboardShortcutsHelpService {\n    /**\n     * @ignore\n     * @param {KeyboardShortcutsService} keyboard\n     */\n    constructor(private keyboard: KeyboardShortcutsService) {}\n\n    /**\n     * Observable to provide access to all registered shortcuts in the app.\n     * @type {Observable<any>}\n     */\n    public shortcuts$ = this.keyboard.shortcuts$.pipe(\n        map(shortcuts =>\n            shortcuts\n                .filter(shortcut => Boolean(shortcut.label) && Boolean(shortcut.description))\n                .map(({ key, label, description }) => ({\n                    key,\n                    label,\n                    description\n                }))\n        )\n    );\n}\n","import { Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from \"@angular/core\";\nimport { AllowIn, Shortcut } from \"./ng-keyboard-shortcuts.interfaces\";\nimport { KeyboardShortcutsService } from \"./ng-keyboard-shortcuts.service\";\n\n/**\n * A directive to be used with \"focusable\" elements, like:\n * textarea, input, select.\n */\n@Directive({\n    selector: \"[ngKeyboardShortcuts]\"\n})\nexport class KeyboardShortcutsDirective implements OnDestroy, OnChanges {\n    /**\n     * clearId to remove shortcuts.\n     */\n    private clearIds;\n    /**\n     * Shortcut inputs for the directive.\n     * will only work when the element is in focus\n     */\n    @Input() ngKeyboardShortcuts: Shortcut[];\n    /**\n     * @ignore\n     * @type {boolean}\n     * @private\n     */\n    private _disabled = false;\n\n    /**\n     * whether to disable the shortcuts for this directive\n     * @param value\n     */\n    @Input() set disabled(value) {\n        this._disabled = value;\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        setTimeout(() => {\n            if (value === false && this.ngKeyboardShortcuts) {\n                this.clearIds = this.keyboard.add(this.transformInput(this.ngKeyboardShortcuts));\n            }\n        })\n\n    }\n\n    /**\n     * @ignore\n     * @param {KeyboardShortcutsService} keyboard\n     * @param {ElementRef} el\n     */\n    constructor(private keyboard: KeyboardShortcutsService, private el: ElementRef) {}\n\n    /**\n     * @ignore\n     * @param {Shortcut[]} shortcuts\n     * @returns {any}\n     */\n    private transformInput(shortcuts: Shortcut[]) {\n        return shortcuts.map(shortcut => ({\n            ...shortcut,\n            target: this.el.nativeElement,\n            allowIn: [AllowIn.Select, AllowIn.Input, AllowIn.Textarea]\n        }));\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy() {\n        if (!this.clearIds) {\n            return;\n        }\n        this.keyboard.remove(this.clearIds);\n    }\n\n    /**\n     * @ignore\n     * @param {SimpleChanges} changes\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        const { ngKeyboardShortcuts } = changes;\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        if (!ngKeyboardShortcuts || !ngKeyboardShortcuts.currentValue) {\n            return;\n        }\n        this.clearIds = this.keyboard.add(this.transformInput(ngKeyboardShortcuts.currentValue));\n    }\n}\n","import {\n    TemplateRef,\n    ViewContainerRef,\n    ElementRef,\n    ComponentRef,\n    EmbeddedViewRef,\n    Injector,\n    ComponentFactoryResolver,\n} from '@angular/core';\n\n/**\n * @ignore\n * Interface that can be used to generically type a class.\n */\nexport interface ComponentType<T> {\n    new (...args: any[]): T;\n}\n\n/**\n * @ignore\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nexport abstract class Portal<T> {\n    private _attachedHost: PortalOutlet | null;\n\n    /** Attach this portal to a host. */\n    attach(host: PortalOutlet): T {\n        if (host == null) {\n            // TODO: add error\n            console.error(\"null portal error\");\n        }\n\n        if (host.hasAttached()) {\n            console.error(\"portal already attached\");\n            // throwPortalAlreadyAttachedError();\n        }\n\n        this._attachedHost = host;\n        return <T> host.attach(this);\n    }\n\n    /** Detach this portal from its host */\n    detach(): void {\n        let host = this._attachedHost;\n\n        if (host == null) {\n            console.error(\"no portal attached!\");\n            // throwNoPortalAttachedError();\n        } else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n\n    /** Whether this portal is attached to a host. */\n    get isAttached(): boolean {\n        return this._attachedHost != null;\n    }\n\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host: PortalOutlet | null) {\n        this._attachedHost = host;\n    }\n}\n\n\n/**\n * @ignore\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\n    /** The type of the component that will be instantiated for attachment. */\n    component: ComponentType<T>;\n\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     */\n    viewContainerRef?: ViewContainerRef | null;\n\n    /** [Optional] Injector used for the instantiation of the component. */\n    injector?: Injector | null;\n\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     */\n    componentFactoryResolver?: ComponentFactoryResolver | null;\n\n    constructor(\n        component: ComponentType<T>,\n        viewContainerRef?: ViewContainerRef | null,\n        injector?: Injector | null,\n        componentFactoryResolver?: ComponentFactoryResolver | null) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n\n/**\n * @ignore\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nexport class TemplatePortal<C = any> extends Portal<C> {\n    /** The embedded template that will be used to instantiate an embedded View in the host. */\n    templateRef: TemplateRef<C>;\n\n    /** Reference to the ViewContainer into which the template will be stamped out. */\n    viewContainerRef: ViewContainerRef;\n\n    /** Contextual data to be passed in to the embedded view. */\n    context: C | undefined;\n\n    constructor(template: TemplateRef<C>, viewContainerRef: ViewContainerRef, context?: C) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n\n    get origin(): ElementRef {\n        return this.templateRef.elementRef;\n    }\n\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host: PortalOutlet, context: C | undefined = this.context): C {\n        this.context = context;\n        return super.attach(host);\n    }\n\n    detach(): void {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n\n\n/**\n * @ignore\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n */\nexport interface PortalOutlet {\n    /** Attaches a portal to this outlet. */\n    attach(portal: Portal<any>): any;\n\n    /** Detaches the currently attached portal from this outlet. */\n    detach(): any;\n\n    /** Performs cleanup before the outlet is destroyed. */\n    dispose(): void;\n\n    /** Whether there is currently a portal attached to this outlet. */\n    hasAttached(): boolean;\n}\n\n\n/**\n * @ignore\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nexport abstract class BasePortalOutlet implements PortalOutlet {\n    /** The portal currently attached to the host. */\n    protected _attachedPortal: Portal<any> | null;\n\n    /** A function that will permanently dispose this host. */\n    private _disposeFn: (() => void) | null;\n\n    /** Whether this host has already been permanently disposed. */\n    private _isDisposed: boolean = false;\n\n    /** Whether this host has an attached portal. */\n    hasAttached(): boolean {\n        return !!this._attachedPortal;\n    }\n\n    attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n    attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\n    attach(portal: any): any;\n\n    /** Attaches a portal. */\n    attach(portal: Portal<any>): any {\n        if (!portal) {\n            console.error('null portal!');\n            // throwNullPortalError();\n        }\n\n        if (this.hasAttached()) {\n            console.error('portal already attached');\n            // throwPortalAlreadyAttachedError();\n        }\n\n        if (this._isDisposed) {\n            console.error('portal out already disposed');\n            // throwPortalOutletAlreadyDisposedError();\n        }\n\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        } else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n        }\n        console.error('unknown portal type');\n        // throwUnknownPortalTypeError();\n    }\n\n    abstract attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n\n    abstract attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\n\n    /** Detaches a previously attached portal. */\n    detach(): void {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n\n        this._invokeDisposeFn();\n    }\n\n    /** Permanently dispose of this portal host. */\n    dispose(): void {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n\n    /** @docs-private */\n    setDisposeFn(fn: () => void) {\n        this._disposeFn = fn;\n    }\n\n    private _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  ApplicationRef,\n  Injector,\n} from '@angular/core';\nimport {BasePortalOutlet, ComponentPortal, TemplatePortal} from './portal';\n\n\n/**\n * @ignore\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nexport class DomPortalOutlet extends BasePortalOutlet {\n  constructor(\n      /** Element into which the content is projected. */\n      public outletElement: Element,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _appRef: ApplicationRef,\n      private _defaultInjector: Injector) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   * @returns Reference to the created component.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n    const componentFactory = resolver.resolveComponentFactory(portal.component);\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the view to the application.\n    if (portal.viewContainerRef) {\n      componentRef = portal.viewContainerRef.createComponent(\n          componentFactory,\n          portal.viewContainerRef.length,\n          portal.injector || portal.viewContainerRef.injector);\n\n      this.setDisposeFn(() => componentRef.destroy());\n    } else {\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n      this._appRef.attachView(componentRef.hostView);\n      this.setDisposeFn(() => {\n        this._appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n      });\n    }\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n\n    return componentRef;\n  }\n\n  /**\n   * Attaches a template portal to the DOM as an embedded view.\n   * @param portal Portal to be attached.\n   * @returns Reference to the created embedded view.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    let viewContainer = portal.viewContainerRef;\n    let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n    viewRef.detectChanges();\n\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n    // But for the DomPortalOutlet the view can be added everywhere in the DOM\n    // (e.g Overlay Container) To move the view to the specified host element. We just\n    // re-append the existing root nodes.\n    viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n\n    this.setDisposeFn((() => {\n      let index = viewContainer.indexOf(viewRef);\n      if (index !== -1) {\n        viewContainer.remove(index);\n      }\n    }));\n\n    return viewRef;\n  }\n\n  /**\n   * Clears out a portal from the DOM.\n   */\n  dispose(): void {\n    super.dispose();\n    if (this.outletElement.parentNode != null) {\n      this.outletElement.parentNode.removeChild(this.outletElement);\n    }\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n","import {\n    ApplicationRef,\n    Component,\n    ComponentFactoryResolver, ElementRef, HostBinding,\n    Injector,\n    Input,\n    OnDestroy,\n    OnInit,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef\n} from \"@angular/core\";\nimport { DomPortalOutlet } from \"./dom-portal-outlet\";\nimport { TemplatePortal } from \"./portal\";\nimport { KeyboardShortcutsService } from \"./ng-keyboard-shortcuts.service\";\nimport { KeyboardShortcutsHelpService } from \"./ng-keyboard-shortcuts-help.service\";\nimport { animate, style, transition, trigger } from \"@angular/animations\";\nimport { distinctUntilChanged } from \"rxjs/operators\";\nimport { groupBy } from \"./utils\";\nimport { map } from \"rxjs/internal/operators\";\nimport { SubscriptionLike } from \"rxjs\";\n\n/**\n * @ignore\n */\nconst scrollAbleKeys = new Map([[31, 1], [38,1], [39, 1], [40, 1]]);\n/**\n * @ignore\n */\nconst preventDefault = (ignore: string) => e => {\n    const modal = e.target.closest(ignore);\n    if (modal) {\n        return;\n    }\n    e = e || window.event;\n    if (e.preventDefault) e.preventDefault();\n    e.returnValue = false;\n};\n/**\n * @ignore\n */\nconst preventDefaultForScrollKeys = e => {\n    if (!scrollAbleKeys.has(e.keyCode)) {\n        return;\n    }\n    preventDefault(e);\n    return false;\n};\n/**\n * @ignore\n */\nlet scrollEvents = [{name: 'wheel', callback: null}, {name: 'touchmove', callback: null}, {name: 'DOMMouseScroll', callback: null} ];\n\n\n/**\n * @ignore\n */\nconst disableScroll = (ignore: string) => {\n    scrollEvents = scrollEvents.map(event => {\n        const callback = preventDefault(ignore);\n        window.addEventListener(event.name, callback, {passive: false});\n        return {\n            ...event,\n            callback\n        }\n    });\n    window.addEventListener('keydown', preventDefaultForScrollKeys);\n};\n/**\n * @ignore\n */\nconst enableScroll = () => {\n    scrollEvents = scrollEvents.map(event => {\n        window.removeEventListener(event.name, event.callback);\n        return {\n            ...event,\n            callback: null\n        }\n    });\n    window.removeEventListener('keydown', preventDefaultForScrollKeys);\n};\n\n/**\n * A Component to show all registered shortcut in the app\n * it is shown as a modal\n */\n@Component({\n    selector: \"ng-keyboard-shortcuts-help\",\n    templateUrl: \"./ng-keyboard-shortcuts-help.component.html\",\n    styleUrls: [\"./ng-keyboard-shortcuts-help.component.css\"],\n    animations: [\n        trigger(\"enterAnimation\", [\n            transition(\":enter\", [\n                style({ transform: \"translateX(-100%)\", opacity: 0 }),\n                animate(\n                    \"0.33s cubic-bezier(0,0,0.3,1)\",\n                    style({ transform: \"translateX(0)\", opacity: 1 })\n                )\n            ]),\n            transition(\":leave\", [\n                style({ transform: \"translateX(0)\", opacity: 1 }),\n                animate(\n                    \"0.23s cubic-bezier(0,0,0.3,1)\",\n                    style({ transform: \"translateX(-100%)\", opacity: 0 })\n                )\n            ])\n        ]),\n        trigger(\"overlayAnimation\", [\n            transition(\":enter\", [\n                style({ opacity: 0 }),\n                animate(\"1s cubic-bezier(0,0,0.3,1)\", style({ opacity: 1 }))\n            ]),\n            transition(\":leave\", [\n                style({ opacity: 1 }),\n                animate(\"1s cubic-bezier(0,0,0.3,1)\", style({ opacity: 0 }))\n            ])\n        ])\n    ]\n})\nexport class KeyboardShortcutsHelpComponent implements OnInit, OnDestroy {\n    /**\n     * Disable scrolling while modal is open\n     */\n    @Input() disableScrolling = true;\n    /**\n     * @ignore\n     */\n    private _key: string;\n\n    public className = 'help-modal';\n\n    /**\n     * The shortcut to show/hide the help screen\n     */\n    @Input()\n    set key(value: string) {\n        this._key = value;\n        if (!value) {\n            return;\n        }\n        if(this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        this.clearIds = this.keyboard.add({\n            key: value,\n            preventDefault: true,\n            command: () => this.toggle()\n        });\n    }\n    private _closeKey;\n    @Input()\n    set closeKey(value: string) {\n        this._closeKey = value;\n        if (!value) {\n            return;\n        }\n        if (this.closeKeyIds) {\n            this.keyboard.remove(this.closeKeyIds);\n        }\n        this.closeKeyIds = this.keyboard.add({\n            key: value,\n            preventDefault: true,\n            command: () => this.hide()\n        });\n    }\n\n    /**\n     * The title of the help screen\n     * @default: \"Keyboard shortcuts\"\n     */\n    @Input() title = \"Keyboard shortcuts\";\n    /**\n     * What message to show when no shortcuts are available on the page.\n     * @default \"No shortcuts available\"\n     */\n    @Input() emptyMessage = \"No shortcuts available\";\n    /**\n     * @ignore\n     */\n    @ViewChild(TemplateRef, { static: false }) template: TemplateRef<any>;\n    /**\n     * @ignore\n     */\n    shortcuts: { label: string; key: string | string[]; description: string }[];\n    /**\n     * @ignore\n     */\n    showing = false;\n    /**\n     * @ignore\n     */\n    labels: string[];\n    /**\n     * @ignore\n     */\n    private bodyPortalHost: DomPortalOutlet;\n    /**\n     * @ignore\n     */\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private appRef: ApplicationRef,\n        private keyboard: KeyboardShortcutsService,\n        private element: ElementRef,\n        private keyboardHelp: KeyboardShortcutsHelpService,\n        private viewContainer: ViewContainerRef,\n        private injector: Injector\n    ) {\n        this.bodyPortalHost = new DomPortalOutlet(\n            document.body,\n            this.componentFactoryResolver,\n            this.appRef,\n            this.injector\n        );\n    }\n\n    /**\n     * Reveal the help screen manually.\n     */\n    reveal(): KeyboardShortcutsHelpComponent {\n        this.hide();\n        if (this.disableScrolling) {\n            disableScroll(`.${this.className}`);\n        }\n        const portal = new TemplatePortal(this.template, this.viewContainer);\n        this.bodyPortalHost.attach(portal);\n        this.showing = true;\n        return this;\n    }\n\n    /**\n     * Check if help screen is visible.\n     * @returns boolean\n     */\n    visible() : boolean {\n        return this.bodyPortalHost.hasAttached();\n    }\n\n    /**\n     * Hide the help screen manually.\n     */\n    hide() : KeyboardShortcutsHelpComponent {\n        if (this.disableScrolling) {\n            enableScroll();\n        }\n        if (!this.bodyPortalHost.hasAttached()) {\n            return this;\n        }\n        this.bodyPortalHost.detach();\n        this.showing = false;\n        return this;\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnDestroy(): void {\n        this.hide();\n        if (this.clearIds) {\n            this.keyboard.remove(this.clearIds);\n        }\n        if (this.closeKeyIds) {\n            this.keyboard.remove(this.closeKeyIds);\n        }\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n        }\n    }\n\n    /**\n     * Show/Hide the help screen manually.\n     */\n    toggle() : KeyboardShortcutsHelpComponent {\n        this.visible() ? this.hide() : this.reveal();\n        return this;\n    }\n\n    /**\n     * @ignore\n     */\n    private subscription: SubscriptionLike;\n    /**\n     * @ignore\n     */\n    private clearIds;\n\n    /**\n     * @ignore\n     */\n    private closeKeyIds;\n    /**\n     * @ignore\n     */\n    private timeoutId;\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n        this.subscription = this.keyboardHelp.shortcuts$\n            .pipe(distinctUntilChanged(), map(shortcuts => groupBy(shortcuts, \"label\")))\n            .subscribe(shortcuts => {\n                this.shortcuts = shortcuts;\n                this.labels = Object.keys(shortcuts);\n            });\n    }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Shortcut } from \"./ng-keyboard-shortcuts.interfaces\";\nimport { symbols } from \"./keys\";\nimport { identity } from './utils';\n\n/**\n * @ignore\n */\n@Component({\n    selector: \"ng-keyboard-shortcuts-help-item\",\n    templateUrl: \"./ng-keyboard-shortcuts-help-item.component.html\",\n    styleUrls: [\"./ng-keyboard-shortcuts-help-item.component.css\"]\n})\nexport class KeyboardShortcutsHelpItemComponent implements OnInit {\n    public parsedKeys: string[][];\n\n    @Input() index: number;\n\n    @Input()\n    set shortcut(shortcut: Shortcut) {\n        const key = Array.isArray(shortcut.key) ? shortcut.key : [shortcut.key];\n        this.parsedKeys = key.map(key =>\n            key\n                .split(\" \")\n                .filter(identity)\n                .filter(key => key !== \"+\")\n                .map(key => {\n                    if (symbols[key]) {\n                        return symbols[key];\n                    }\n                    return key;\n                })\n        );\n        this._shortcut = shortcut;\n    }\n    get shortcut() {\n        return this._shortcut;\n    }\n\n    private _shortcut: Shortcut;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { KeyboardShortcutsComponent } from \"./ng-keyboard-shortcuts.component\";\nimport { KeyboardShortcutsService } from \"./ng-keyboard-shortcuts.service\";\nimport { KeyboardShortcutsHelpService } from './ng-keyboard-shortcuts-help.service';\nimport { KeyboardShortcutsDirective } from './ng-keyboard-shortcuts.directive';\nimport { KeyboardShortcutsHelpComponent } from './ng-keyboard-shortcuts-help.component';\nimport { KeyboardShortcutsHelpItemComponent } from './ng-keyboard-shortcuts-help-item.component';\nimport { CommonModule } from \"@angular/common\";\n\n\n\n@NgModule({\n    imports: [CommonModule],\n    entryComponents: [KeyboardShortcutsHelpComponent],\n    declarations: [KeyboardShortcutsComponent, KeyboardShortcutsDirective, KeyboardShortcutsHelpComponent, KeyboardShortcutsHelpItemComponent],\n    exports: [KeyboardShortcutsComponent, KeyboardShortcutsDirective, KeyboardShortcutsHelpComponent]\n})\nexport class KeyboardShortcutsModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: KeyboardShortcutsModule,\n            providers: [\n                KeyboardShortcutsService,\n                KeyboardShortcutsHelpService\n            ]\n        };\n    }\n}\n","if (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        let el = this;\n\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\n\nif (!(Array.prototype as any).flat) {\n    (Array.prototype as any).flat = function(depth) {\n        var flattend = [];\n        (function flat(array, depth) {\n            for (let el of array) {\n                if (Array.isArray(el) && depth > 0) {\n                    flat(el, depth - 1);\n                } else {\n                    flattend.push(el);\n                }\n            }\n        })(this, Math.floor(depth) || 1);\n        return flattend;\n    };\n}\n\nif (!(Array.prototype as any).flatMap) {\n    (Array.prototype as any).flatMap = function() {\n        return Array.prototype.map.apply(this, arguments).flat(1);\n    };\n}"]}